[{"/home/julia/onshape-library-window/frontend/src/App.tsx":"1","/home/julia/onshape-library-window/frontend/src/utils/api.ts":"2","/home/julia/onshape-library-window/frontend/src/index.tsx":"3","/home/julia/onshape-library-window/frontend/src/reportWebVitals.ts":"4","/home/julia/onshape-library-window/frontend/src/components/SearchBar.tsx":"5","/home/julia/onshape-library-window/frontend/src/components/insertables/DocumentList.tsx":"6","/home/julia/onshape-library-window/frontend/src/utils/apiWrapper.ts":"7","/home/julia/onshape-library-window/frontend/src/components/insertables/Document.tsx":"8","/home/julia/onshape-library-window/frontend/src/components/insertables/InsertableElement.tsx":"9","/home/julia/onshape-library-window/frontend/src/components/insertables/styles.ts":"10","/home/julia/onshape-library-window/frontend/src/components/InsertDialog.tsx":"11","/home/julia/onshape-library-window/frontend/src/icons/SvgPartIcon.tsx":"12","/home/julia/onshape-library-window/frontend/src/components/fields/QuantityField.tsx":"13","/home/julia/onshape-library-window/frontend/src/components/fields/BooleanField.tsx":"14","/home/julia/onshape-library-window/frontend/src/components/fields/EnumField.tsx":"15","/home/julia/onshape-library-window/frontend/src/components/fields/StringField.tsx":"16"},{"size":607,"mtime":1616021996290,"results":"17","hashOfConfig":"18"},{"size":677,"mtime":1616021996290,"results":"19","hashOfConfig":"18"},{"size":479,"mtime":1616021996290,"results":"20","hashOfConfig":"18"},{"size":425,"mtime":1616021996290,"results":"21","hashOfConfig":"18"},{"size":2354,"mtime":1616021996290,"results":"22","hashOfConfig":"18"},{"size":1252,"mtime":1616021996290,"results":"23","hashOfConfig":"18"},{"size":686,"mtime":1616021996290,"results":"24","hashOfConfig":"18"},{"size":4343,"mtime":1616032769700,"results":"25","hashOfConfig":"18"},{"size":2379,"mtime":1616037090580,"results":"26","hashOfConfig":"18"},{"size":769,"mtime":1616021996290,"results":"27","hashOfConfig":"18"},{"size":2337,"mtime":1616036897960,"results":"28","hashOfConfig":"18"},{"size":721,"mtime":1616021996290,"results":"29","hashOfConfig":"18"},{"size":2302,"mtime":1616035511510,"results":"30","hashOfConfig":"18"},{"size":861,"mtime":1616035995750,"results":"31","hashOfConfig":"18"},{"size":1065,"mtime":1616036764060,"results":"32","hashOfConfig":"18"},{"size":844,"mtime":1616036871110,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"10znjdr",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"37"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"37"},"/home/julia/onshape-library-window/frontend/src/App.tsx",["74"],"import classes from '*.module.css';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core';\n// import React from 'react';\nimport DocumentList from './components/insertables/DocumentList';\nimport SearchBar from './components/SearchBar';\nimport './styles.css'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      // backgroundColor: theme.palette.background.default\n\n    }\n  }\n));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <SearchBar />\n      <DocumentList />\n      \n    </div>\n  );\n}\n\nexport default App;\n",["75","76"],"/home/julia/onshape-library-window/frontend/src/utils/api.ts",[],"/home/julia/onshape-library-window/frontend/src/index.tsx",[],"/home/julia/onshape-library-window/frontend/src/reportWebVitals.ts",[],"/home/julia/onshape-library-window/frontend/src/components/SearchBar.tsx",["77"],"import React, { useRef } from 'react';\nimport { fade, makeStyles, Theme, createStyles, createMuiTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { Checkbox, TextField } from '@material-ui/core';\n\nimport './SearchBar.css'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    grow: {\n      flexGrow: 1,\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        width: 'auto',\n      },\n    },\n    searchColor: {\n      color: 'white'\n    }\n  }),\n);\n\n\n\n\nexport default function Searchbar() {\n  const classes = useStyles();\n\n  const input = useRef(null);\n\n  \n\n  return (\n    <div >\n      <AppBar position=\"static\">\n        <Toolbar>\n          <div className={classes.grow} /> \n          <div className={classes.search}>\n            <Autocomplete\n              ref={input}\n              multiple\n              disableCloseOnSelect\n              options={searchOptions}\n              limitTags={3}\n              classes={{\n                input: classes.searchColor\n              }}\n              color=\"white\"\n              getOptionLabel={(o: SearchOption) => o.title}\n              renderOption={(option, { selected }) => (\n                <React.Fragment>\n                  <Checkbox\n                   checked={selected}\n                  />\n                  {option.title}\n                </React.Fragment>\n              )}\n              style={{ width: 600 }}\n              renderInput={(params) => (\n                <TextField {...params} \n                 // InputProps={{className: classes.searchColor}}\n                 variant=\"outlined\" \n                 placeholder=\"Search\"\n                />\n              )}\n             />\n          </div>\n          <div className={classes.grow} />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\n\nconst searchOptions: SearchOption[] = [\n  { title: 'Part', tag: 'part' },\n  { title: 'Assembly', tag: 'asm'},\n  { title: \"Composite\", tag: \"composite\"},\n  { title: 'Configurable', tag: 'config' }\n]\n\ninterface SearchOption {\n  title: string;\n  tag: string\n}","/home/julia/onshape-library-window/frontend/src/components/insertables/DocumentList.tsx",[],"/home/julia/onshape-library-window/frontend/src/utils/apiWrapper.ts",[],"/home/julia/onshape-library-window/frontend/src/components/insertables/Document.tsx",["78","79","80","81","82","83"],"import { Theme, makeStyles, createStyles, Grid, Paper, Accordion, AccordionDetails, AccordionSummary, Typography, withStyles } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport Part from './Part';\r\nimport Assembly from './Assembly';\r\nimport CompositePart from './CompositePart';\r\n\r\nimport { OnshapeDocument } from '../../utils/models/OnshapeDocument'\r\nimport { OnshapeInsertable } from '../../utils/models/OnshapeInsertable';\r\nimport { getMkcadDocs, getOnshapeInsertables } from '../../utils/apiWrapper';\r\nimport InsertableElement from './InsertableElement';\r\n\r\n\r\n// const useStyles = makeStyles((theme: Theme) => \r\n//     createStyles({\r\n//         root: {\r\n//             // display: 'flex',\r\n//             background: 'gray',\r\n//             // width: '800',\r\n//             // flexGrow: 1\r\n//             // flexBasis: 'auto'\r\n            \r\n//         },\r\n//         grow: {\r\n//             flexGrow: 1\r\n//         },\r\n//         card: {\r\n//             background: 'gray',\r\n//             // paddingLeft: '20%'\r\n            \r\n//         },\r\n//         details: {\r\n//             display: 'flex',\r\n//             flexDirection: 'column',\r\n//         },\r\n//         paper: {\r\n//             // flex: '1 0 auto',\r\n//             padding: theme.spacing(2),\r\n//             width: '90%',\r\n//             backgroundColor: 'gray'\r\n\r\n//         },\r\n//         iconStyle: {\r\n//             width: iconSize,\r\n//             height: iconSize,\r\n//         }\r\n//     }\r\n// ));\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n    createStyles({\r\n        root: {\r\n            width: '100%',\r\n            paddingTop: '0px',\r\n            // backgroundColor: 'gray'\r\n        },\r\n        rootdiv: {\r\n            width: '100%',\r\n            paddingTop: '10px',\r\n            paddingBottom: '10px'\r\n            \r\n        },\r\n        heading: {\r\n            fontSize: theme.typography.pxToRem(15),\r\n            fontWeight: theme.typography.fontWeightRegular,\r\n            // color: 'white',\r\n\r\n            \r\n        },\r\n    })\r\n);\r\nconst AccordionSummaryIconLeft = withStyles({\r\n    expandIcon: {\r\n        order: -1,\r\n        \r\n    },\r\n    content: {\r\n        paddingLeft: '20px'\r\n    }\r\n})(AccordionSummary);\r\n\r\ninterface DocumentProps {\r\n    doc: OnshapeDocument\r\n}\r\n\r\nexport default function Document(props: DocumentProps) {\r\n    const classes = useStyles();\r\n\r\n    const [insertables, setInsertables] = useState<OnshapeInsertable[]>([]);\r\n\r\n    useEffect(() => {\r\n        (async function () {\r\n            const allInsertables = await getOnshapeInsertables();\r\n            const filtered = allInsertables.filter(item => item.documentId === props.doc.id);\r\n            setInsertables(filtered);\r\n        })();\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className={classes.rootdiv}>\r\n            <Accordion className={classes.root}>\r\n                <AccordionSummaryIconLeft\r\n                    expandIcon={<ExpandMore />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                >\r\n                    <Typography className={classes.heading}>{props.doc.name}</Typography>\r\n                </AccordionSummaryIconLeft>\r\n                <AccordionDetails>\r\n                    <Grid\r\n                        container\r\n                        direction=\"column\"\r\n                        justify=\"flex-start\"\r\n                        alignItems='stretch'\r\n                        spacing={1}\r\n                    >\r\n                        {/* <Part title='test'/>\r\n                        <Part title='test title 2'/>\r\n                        <Part title='17t Sprocket'/>\r\n                        <Part title='18t Sprocket'/>\r\n                        <Part title='42t 20dp Gear'/>\r\n                        <Part title='VersaHub' />\r\n                        \r\n                        <Assembly title='wcp gearbox' />\r\n\r\n                        <CompositePart title=\"test\" /> */}\r\n\r\n                        {insertables.length > 0 && insertables.map((p) => {\r\n                            return <InsertableElement insertable={p} />;\r\n                        })}\r\n                        \r\n                    </Grid>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </div>\r\n    )\r\n}","/home/julia/onshape-library-window/frontend/src/components/insertables/InsertableElement.tsx",["84","85","86","87","88","89","90"],"/home/julia/onshape-library-window/frontend/src/components/insertables/styles.ts",[],"/home/julia/onshape-library-window/frontend/src/components/InsertDialog.tsx",["91","92","93","94"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { OnshapeInsertable } from '../utils/models/OnshapeInsertable';\nimport QuantityField from './fields/QuantityField';\nimport BooleanField from './fields/BooleanField';\nimport EnumField from './fields/EnumField';\nimport StringField from './fields/StringField';\n\ninterface InsertDialogProps {\n  insertable: OnshapeInsertable;\n  open: boolean;\n  setOpen: (open: boolean) => void;\n}\n\nexport default function InsertDialog(props: InsertDialogProps) {\n  var insertable = props.insertable;\n\n  const handleClose = () => {\n    props.setOpen(false);\n  };\n\n  const handleInsert = () => {\n    props.setOpen(false);\n  };\n\n  if (!insertable.config) {\n      //handleInsert(); // No config items, insert immediately\n  }\n\n  return (\n    <div>\n      <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Insert</DialogTitle>\n        <DialogContent>\n          {insertable.config && insertable.config.map((configItem) => {\n            if (configItem.type === \"QUANTITY\") {\n                return <div><QuantityField configItem={configItem} /></div>\n            }\n            else if (configItem.type === \"BOOLEAN\") {\n              return <div><BooleanField configItem={configItem} /></div>\n            }\n            else if (configItem.type === \"ENUM\") {\n              return <div><EnumField configItem={configItem} /></div>\n            }\n            else if (configItem.type === \"STRING\") {\n              return <div><StringField configItem={configItem} /></div>\n            }\n          })}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleInsert} color=\"primary\">\n            Insert\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","/home/julia/onshape-library-window/frontend/src/icons/SvgPartIcon.tsx",[],"/home/julia/onshape-library-window/frontend/src/components/fields/QuantityField.tsx",["95","96"],"import React from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { Configuration } from \"../../utils/models/Configuration\";\n\ninterface QuantityFieldProps {\n  configItem: Configuration;\n}\n\nexport default function QuantityField(props: QuantityFieldProps) {\n  const configItem = props.configItem;\n  const [helperText, setHelperText] = React.useState('');\n  const [value, setValue] = React.useState(new String(configItem.default));\n\n  const onBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    var newValue = +event.target.value;\n    if (isNaN(newValue) || event.target.value.length === 0) {\n      setHelperText('Enter a number');\n    }\n  }\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.value.length === 0 || event.target.value === '' || event.target.value === '-' || event.target.value === '-0') {\n      setValue(event.target.value);\n      return;\n    }\n    var newValue = +event.target.value;\n    if (!isNaN(newValue)) {\n      if (configItem.quantityMin && newValue < configItem.quantityMin) {\n        setHelperText(`Quantity must be greater than ${configItem.quantityMin}`);\n      }\n      else if (configItem.quantityMax && newValue > configItem.quantityMax) {\n        setHelperText(`Quantity must be less than ${configItem.quantityMax}`);\n      }\n      else if (configItem.quantityType && configItem.quantityType === \"INTEGER\" && !Number.isInteger(newValue)) {\n        setHelperText(`Quantity must be an integer`);\n      }\n      else {\n        setHelperText('');\n      }\n      setValue(new String(newValue));      \n    } else {\n      setHelperText('Enter a number');\n    }\n  }\n  \n  return <TextField\n              id={configItem.id}\n              label={configItem.name}\n              type=\"number\"\n              value={value}\n              helperText={helperText}\n              onChange={onChange}\n              onBlur={onBlur}\n              error={helperText.length > 0}\n              InputProps={{\n                  endAdornment: <InputAdornment position=\"end\">{configItem.quantityUnits ? configItem.quantityUnits : \"\"}</InputAdornment>,\n              }}\n              InputLabelProps={{\n                  shrink: true,\n              }}\n          />\n      \n  }","/home/julia/onshape-library-window/frontend/src/components/fields/BooleanField.tsx",[],"/home/julia/onshape-library-window/frontend/src/components/fields/EnumField.tsx",["97"],"import React from \"react\";\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { Configuration } from \"../../utils/models/Configuration\";\n\ninterface EnumFieldProps {\n  configItem: Configuration;\n}\n\nexport default function EnumField(props: EnumFieldProps) {\n  const configItem = props.configItem;\n  const [value, setValue] = React.useState(new String(configItem.default));\n\n  const onChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setValue(event.target.value as string);\n  }\n  const label_id = `label-${configItem.id}`;\n  return <div><InputLabel shrink id={label_id}>{configItem.name}</InputLabel>\n          <Select\n            labelId={label_id}\n            id={configItem.id}\n            value={value}\n            onChange={onChange}\n          >\n            {configItem.options && configItem.options.map((opt) => {\n              return <MenuItem value={opt.value}>{opt.name}</MenuItem>\n            })}\n          </Select></div>\n      \n  }","/home/julia/onshape-library-window/frontend/src/components/fields/StringField.tsx",["98","99"],"import React from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { Configuration } from \"../../utils/models/Configuration\";\n\ninterface StringFieldProps {\n  configItem: Configuration;\n}\n\nexport default function StringField(props: StringFieldProps) {\n  const configItem = props.configItem;\n  const [value, setValue] = React.useState(new String(configItem.default));\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  }\n  \n  return <TextField\n              id={configItem.id}\n              label={configItem.name}\n              type=\"text\"\n              value={value}\n              onChange={onChange}\n              InputLabelProps={{\n                  shrink: true,\n              }}\n          />\n      \n  }",{"ruleId":"100","severity":1,"message":"101","line":1,"column":8,"nodeType":"102","messageId":"103","endLine":1,"endColumn":15},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"100","severity":1,"message":"108","line":2,"column":49,"nodeType":"102","messageId":"103","endLine":2,"endColumn":63},{"ruleId":"100","severity":1,"message":"109","line":1,"column":49,"nodeType":"102","messageId":"103","endLine":1,"endColumn":54},{"ruleId":"100","severity":1,"message":"110","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":12},{"ruleId":"100","severity":1,"message":"111","line":6,"column":8,"nodeType":"102","messageId":"103","endLine":6,"endColumn":16},{"ruleId":"100","severity":1,"message":"112","line":7,"column":8,"nodeType":"102","messageId":"103","endLine":7,"endColumn":21},{"ruleId":"100","severity":1,"message":"113","line":11,"column":10,"nodeType":"102","messageId":"103","endLine":11,"endColumn":22},{"ruleId":"114","severity":1,"message":"115","line":98,"column":8,"nodeType":"116","endLine":98,"endColumn":10,"suggestions":"117"},{"ruleId":"100","severity":1,"message":"118","line":3,"column":10,"nodeType":"102","messageId":"103","endLine":3,"endColumn":20},{"ruleId":"100","severity":1,"message":"119","line":3,"column":22,"nodeType":"102","messageId":"103","endLine":3,"endColumn":34},{"ruleId":"100","severity":1,"message":"120","line":3,"column":36,"nodeType":"102","messageId":"103","endLine":3,"endColumn":41},{"ruleId":"100","severity":1,"message":"121","line":4,"column":23,"nodeType":"102","messageId":"103","endLine":4,"endColumn":30},{"ruleId":"100","severity":1,"message":"122","line":6,"column":8,"nodeType":"102","messageId":"103","endLine":6,"endColumn":15},{"ruleId":"100","severity":1,"message":"123","line":18,"column":7,"nodeType":"102","messageId":"103","endLine":18,"endColumn":15},{"ruleId":"100","severity":1,"message":"124","line":20,"column":7,"nodeType":"102","messageId":"103","endLine":20,"endColumn":20},{"ruleId":"100","severity":1,"message":"125","line":3,"column":8,"nodeType":"102","messageId":"103","endLine":3,"endColumn":17},{"ruleId":"100","severity":1,"message":"126","line":4,"column":8,"nodeType":"102","messageId":"103","endLine":4,"endColumn":22},{"ruleId":"100","severity":1,"message":"127","line":8,"column":8,"nodeType":"102","messageId":"103","endLine":8,"endColumn":25},{"ruleId":"128","severity":1,"message":"129","line":42,"column":68,"nodeType":"130","messageId":"131","endLine":42,"endColumn":70},{"ruleId":"132","severity":1,"message":"133","line":13,"column":44,"nodeType":"134","messageId":"135","endLine":13,"endColumn":74},{"ruleId":"132","severity":1,"message":"133","line":41,"column":16,"nodeType":"134","messageId":"135","endLine":41,"endColumn":36},{"ruleId":"132","severity":1,"message":"133","line":13,"column":44,"nodeType":"134","messageId":"135","endLine":13,"endColumn":74},{"ruleId":"100","severity":1,"message":"126","line":3,"column":8,"nodeType":"102","messageId":"103","endLine":3,"endColumn":22},{"ruleId":"132","severity":1,"message":"133","line":12,"column":44,"nodeType":"134","messageId":"135","endLine":12,"endColumn":74},"@typescript-eslint/no-unused-vars","'classes' is defined but never used.","Identifier","unusedVar","no-native-reassign",["136"],"no-negated-in-lhs",["137"],"'createMuiTheme' is defined but never used.","'Paper' is defined but never used.","'Part' is defined but never used.","'Assembly' is defined but never used.","'CompositePart' is defined but never used.","'getMkcadDocs' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.doc.id'. Either include it or remove the dependency array.","ArrayExpression",["138"],"'makeStyles' is defined but never used.","'createStyles' is defined but never used.","'Theme' is defined but never used.","'SvgIcon' is defined but never used.","'Divider' is defined but never used.","'PartIcon' is assigned a value but never used.","'CompositeIcon' is assigned a value but never used.","'TextField' is defined but never used.","'InputAdornment' is defined but never used.","'DialogContentText' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-new-wrappers","Do not use String as a constructor.","NewExpression","noConstructor","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},"Update the dependencies array to be: [props.doc.id]",{"range":"141","text":"142"},[2804,2806],"[props.doc.id]"]
