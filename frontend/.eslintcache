[{"/mnt/c/Users/karth/source/dev/onshape-library-window/frontend/src/components/insertables/Document.tsx":"1","/mnt/c/Users/karth/source/dev/onshape-library-window/frontend/src/components/SearchBar.tsx":"2","/mnt/c/Users/karth/source/dev/onshape-library-window/frontend/src/components/insertables/Part.tsx":"3","/mnt/c/Users/karth/source/dev/onshape-library-window/frontend/src/components/insertables/DocumentList.tsx":"4","/mnt/c/Users/karth/source/dev/onshape-library-window/frontend/src/App.tsx":"5","/mnt/c/Users/karth/source/dev/onshape-library-window/frontend/src/reportWebVitals.ts":"6","/mnt/c/Users/karth/source/dev/onshape-library-window/frontend/src/components/insertables/Assembly.tsx":"7","/mnt/c/Users/karth/source/dev/onshape-library-window/frontend/src/index.tsx":"8","/mnt/c/Users/karth/source/dev/onshape-library-window/frontend/src/components/insertables/styles.ts":"9"},{"size":3558,"mtime":1612736348879,"results":"10","hashOfConfig":"11"},{"size":2354,"mtime":1612736355074,"results":"12","hashOfConfig":"11"},{"size":1796,"mtime":1612757754634,"results":"13","hashOfConfig":"11"},{"size":854,"mtime":1612685011949,"results":"14","hashOfConfig":"11"},{"size":604,"mtime":1612742875180,"results":"15","hashOfConfig":"11"},{"size":425,"mtime":1611690932798,"results":"16","hashOfConfig":"11"},{"size":920,"mtime":1612742005262,"results":"17","hashOfConfig":"11"},{"size":479,"mtime":1611894994763,"results":"18","hashOfConfig":"11"},{"size":412,"mtime":1612741799739,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"zyc10g",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/karth/source/dev/onshape-library-window/frontend/src/components/insertables/Document.tsx",["41"],"import { Theme, makeStyles, createStyles, Grid, Paper, Accordion, AccordionDetails, AccordionSummary, Typography, withStyles } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport Part from './Part';\r\nimport Assembly from './Assembly';\r\n\r\n\r\n\r\n// const useStyles = makeStyles((theme: Theme) => \r\n//     createStyles({\r\n//         root: {\r\n//             // display: 'flex',\r\n//             background: 'gray',\r\n//             // width: '800',\r\n//             // flexGrow: 1\r\n//             // flexBasis: 'auto'\r\n            \r\n//         },\r\n//         grow: {\r\n//             flexGrow: 1\r\n//         },\r\n//         card: {\r\n//             background: 'gray',\r\n//             // paddingLeft: '20%'\r\n            \r\n//         },\r\n//         details: {\r\n//             display: 'flex',\r\n//             flexDirection: 'column',\r\n//         },\r\n//         paper: {\r\n//             // flex: '1 0 auto',\r\n//             padding: theme.spacing(2),\r\n//             width: '90%',\r\n//             backgroundColor: 'gray'\r\n\r\n//         },\r\n//         iconStyle: {\r\n//             width: iconSize,\r\n//             height: iconSize,\r\n//         }\r\n//     }\r\n// ));\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n    createStyles({\r\n        root: {\r\n            width: '100%',\r\n            paddingTop: '0px',\r\n            // backgroundColor: 'gray'\r\n        },\r\n        rootdiv: {\r\n            width: '100%',\r\n            paddingTop: '10px',\r\n            paddingBottom: '10px'\r\n            \r\n        },\r\n        heading: {\r\n            fontSize: theme.typography.pxToRem(15),\r\n            fontWeight: theme.typography.fontWeightRegular,\r\n            // color: 'white',\r\n\r\n            \r\n        },\r\n    })\r\n);\r\nconst AccordionSummaryIconLeft = withStyles({\r\n    expandIcon: {\r\n        order: -1,\r\n        \r\n    },\r\n    content: {\r\n        paddingLeft: '20px'\r\n    }\r\n})(AccordionSummary);\r\n\r\n\r\nexport default function Document() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.rootdiv}>\r\n            <Accordion className={classes.root}>\r\n                <AccordionSummaryIconLeft\r\n                    expandIcon={<ExpandMore />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                >\r\n                    <Typography className={classes.heading}>Example doc title</Typography>\r\n                </AccordionSummaryIconLeft>\r\n                <AccordionDetails>\r\n                    <Grid\r\n                        container\r\n                        direction=\"column\"\r\n                        justify=\"flex-start\"\r\n                        alignItems='stretch'\r\n                        spacing={1}\r\n                    >\r\n                        <Part title='test'/>\r\n                        <Part title='test title 2'/>\r\n                        <Part title='17t Sprocket'/>\r\n                        <Part title='18t Sprocket'/>\r\n                        <Part title='42t 20dp Gear'/>\r\n                        <Part title='VersaHub' />\r\n                        \r\n                        <Assembly title='wcp gearbox' />\r\n                        \r\n                    </Grid>\r\n                    {/* <Typography>\r\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\r\n                        sit amet blandit leo lobortis eget.\r\n                    </Typography> */}\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </div>\r\n    )\r\n}","/mnt/c/Users/karth/source/dev/onshape-library-window/frontend/src/components/SearchBar.tsx",["42"],"import React, { useRef } from 'react';\nimport { fade, makeStyles, Theme, createStyles, createMuiTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { Checkbox, TextField } from '@material-ui/core';\n\nimport './SearchBar.css'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    grow: {\n      flexGrow: 1,\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        width: 'auto',\n      },\n    },\n    searchColor: {\n      color: 'white'\n    }\n  }),\n);\n\n\n\n\nexport default function Searchbar() {\n  const classes = useStyles();\n\n  const input = useRef(null);\n\n  \n\n  return (\n    <div >\n      <AppBar position=\"static\">\n        <Toolbar>\n          <div className={classes.grow} /> \n          <div className={classes.search}>\n            <Autocomplete\n              ref={input}\n              multiple\n              disableCloseOnSelect\n              options={searchOptions}\n              limitTags={3}\n              classes={{\n                input: classes.searchColor\n              }}\n              color=\"white\"\n              getOptionLabel={(o: SearchOption) => o.title}\n              renderOption={(option, { selected }) => (\n                <React.Fragment>\n                  <Checkbox\n                   checked={selected}\n                  />\n                  {option.title}\n                </React.Fragment>\n              )}\n              style={{ width: 600 }}\n              renderInput={(params) => (\n                <TextField {...params} \n                 // InputProps={{className: classes.searchColor}}\n                 variant=\"outlined\" \n                 placeholder=\"Search\"\n                />\n              )}\n             />\n          </div>\n          <div className={classes.grow} />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\n\nconst searchOptions: SearchOption[] = [\n  { title: 'Part', tag: 'part' },\n  { title: 'Assembly', tag: 'asm'},\n  { title: \"Composite\", tag: \"composite\"},\n  { title: 'Configurable', tag: 'config' }\n]\n\ninterface SearchOption {\n  title: string;\n  tag: string\n}","/mnt/c/Users/karth/source/dev/onshape-library-window/frontend/src/components/insertables/Part.tsx",["43","44","45","46","47","48"],"/mnt/c/Users/karth/source/dev/onshape-library-window/frontend/src/components/insertables/DocumentList.tsx",[],"/mnt/c/Users/karth/source/dev/onshape-library-window/frontend/src/App.tsx",["49"],"/mnt/c/Users/karth/source/dev/onshape-library-window/frontend/src/reportWebVitals.ts",[],["50","51"],"/mnt/c/Users/karth/source/dev/onshape-library-window/frontend/src/components/insertables/Assembly.tsx",[],"/mnt/c/Users/karth/source/dev/onshape-library-window/frontend/src/index.tsx",[],"/mnt/c/Users/karth/source/dev/onshape-library-window/frontend/src/components/insertables/styles.ts",[],{"ruleId":"52","severity":1,"message":"53","line":1,"column":49,"nodeType":"54","messageId":"55","endLine":1,"endColumn":54},{"ruleId":"52","severity":1,"message":"56","line":2,"column":49,"nodeType":"54","messageId":"55","endLine":2,"endColumn":63},{"ruleId":"52","severity":1,"message":"57","line":3,"column":10,"nodeType":"54","messageId":"55","endLine":3,"endColumn":20},{"ruleId":"52","severity":1,"message":"58","line":3,"column":22,"nodeType":"54","messageId":"55","endLine":3,"endColumn":34},{"ruleId":"52","severity":1,"message":"59","line":3,"column":36,"nodeType":"54","messageId":"55","endLine":3,"endColumn":41},{"ruleId":"52","severity":1,"message":"60","line":6,"column":8,"nodeType":"54","messageId":"55","endLine":6,"endColumn":15},{"ruleId":"52","severity":1,"message":"61","line":17,"column":7,"nodeType":"54","messageId":"55","endLine":17,"endColumn":19},{"ruleId":"52","severity":1,"message":"62","line":18,"column":7,"nodeType":"54","messageId":"55","endLine":18,"endColumn":20},{"ruleId":"52","severity":1,"message":"63","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":15},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},"@typescript-eslint/no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'createMuiTheme' is defined but never used.","'makeStyles' is defined but never used.","'createStyles' is defined but never used.","'Theme' is defined but never used.","'Divider' is defined but never used.","'AssemblyIcon' is assigned a value but never used.","'CompositeIcon' is assigned a value but never used.","'classes' is defined but never used.","no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-global-assign","no-unsafe-negation"]